spring:
  application:
    name: cloud-eureka
management:
  endpoints:
    web:
      exposure:
        include: '*'
---
server:
  port: 10001
spring:
  profiles: peer1

eureka:
  server:
    #\u68C0\u67E5\u6CE8\u518C\u7684\u670D\u52A1\u662F\u5426\u5931\u6548\u95F4\u9694
    eviction-interval-timer-in-ms: 5000
    enable-self-preservation: false
  instance:
    hostname: peer1
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://peer2:10002/eureka,http://peer3:10003/eureka
    health-check:
      enabled: true
---
server:
  port: 10002
spring:
  profiles: peer2

eureka:
  server:
    #\u68C0\u67E5\u6CE8\u518C\u7684\u670D\u52A1\u662F\u5426\u5931\u6548\u95F4\u9694
    eviction-interval-timer-in-ms: 5000
    enable-self-preservation: false
  instance:
    hostname: peer2
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://peer1:10001/eureka,http://peer3:10003/eureka
    health-check:
      enabled: true
---
server:
  port: 10003
spring:
  profiles: peer3

eureka:
  server:
    #\u68C0\u67E5\u6CE8\u518C\u7684\u670D\u52A1\u662F\u5426\u5931\u6548\u95F4\u9694
    eviction-interval-timer-in-ms: 5000
    enable-self-preservation: false
  instance:
    hostname: peer3
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://peer1:10001/eureka,http://peer2:10002/eureka
    health-check:
      enabled: true
